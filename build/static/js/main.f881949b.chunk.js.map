{"version":3,"sources":["models/patient/patientPurchase.js","models/patient/patientList.js","models/patient/index.js","api/index.js","models/stock/eachItemEntry.js","models/stock/itemData.js","models/stock/index.js","models/purchase/eachProductPurchase.js","models/purchase/index.js","components/chart/index.js","components/chart/pie.js","models/dashboard/index.js","models/dealer/dealer.js","models/dealer/dealerList.js","models/dealer/index.js","services/constants.jsx","components/navigation/navigation.js","routes/index.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PatientPurchase","title","useState","React","field","initialEditValue","type","lookup","34","63","columns","name","surname","phone","city","data","setData","style","margin","options","selection","actionsColumnIndex","actions","icon","tooltip","onClick","event","rowData","alert","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","id","onRowDelete","dataDelete","index","splice","PatientList","1","2","3","4","5","6","7","8","9","10","11","phoneNumber","address","coins","repeatType","repeatDate","grouping","detailPanel","render","Fragment","TabPanel","props","children","value","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","List","classes","setValue","className","AppBar","position","color","Tabs","onChange","newValue","aria-label","Tab","label","API","axios","create","baseURL","interceptors","request","use","config","error","response","appBar","backgroundColor","marginLeft","spacing","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","open","setOpen","handleClose","Dialog","fullScreen","onClose","TransitionComponent","Toolbar","IconButton","edge","variant","Button","autoFocus","EachItemEntry","useEffect","get","then","res","console","log","catch","err","sno","productCode","expireDate","batchNo","stocky","productName","packingType","packingVolume","quantity","ptr","ptrGST","totalPTR","mrp","discount","sellingPrice","handleRowAdd","post","exportButton","CreateStock","isLoading","setIsLoading","enqueueSnackbar","useSnackbar","getStocks","handleRowUpdate","delete","handleRowDelete","Stock","EachProductPurchase","description","unit","rate","taxPercentage","taxAmount","Purchase","ApexChart","state","series","chart","height","plotOptions","bar","dataLabels","enabled","formatter","val","offsetY","fontSize","colors","xaxis","categories","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","yaxis","labels","text","floating","align","this","Component","width","responsive","breakpoint","legend","paper","padding","Dashboard","Paper","Dealer","dealerName","paymentMethod","lastPayment","creditDays","DealerList","sideBarData","Date","url","active","drawerWidth","display","drawer","breakpoints","up","flexShrink","drawerOpen","transition","transitions","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","menuButton","float","right","toolbar","mixins","toolBarContent","background","sidebarContent","cursor","drawerPaper","content","paddingLeft","paddingRight","paddingBottom","activeItem","inActiveItem","header","withRouter","container","useTheme","anchorEl","Boolean","mobileOpen","setMobileOpen","current","setCurrent","activeRoute","pathName","window","location","pathname","indexOf","Divider","map","to","ListItem","ListItemIcon","Icon","ListItemText","primary","CssBaseline","clsx","appBarShift","hide","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","xsDown","exact","path","Routes","hot","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.f881949b.chunk.js","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\nfunction PatientPurchase({title}) {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Medition Name', field: 'name' },\n        { title: 'Place', field: 'surname', initialEditValue: 'initial edit value' },\n        { title: 'Price', field: 'phone', type: 'numeric' },\n        {\n            title: 'Tax',\n            field: 'city',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n        },\n        {\n            title: 'Discount',\n            field: 'city',\n        },\n        {\n            title: 'Totak',\n            field: 'city',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { name: 'Pradeep', surname: 'Prakash', phone: 9976322613, city: 'Kolakaranoor' },\n        { name: 'Mani', surname: 'Vasakam', phone: 993826778, city: 34 },\n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    selection:true,\n                    // filtering: true,\n                    // grouping: false,\n                    actionsColumnIndex: -1\n                  }}\n                  actions={[\n                    {\n                      icon: 'receipt',\n                      tooltip: 'Save User',\n                      onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n                    }\n                ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PatientPurchase;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport PatientPurchase from './patientPurchase';\nfunction PatientList({type}) {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Name', field: 'name' },\n        { title: 'Phone Number', field: 'phoneNumber', type: 'numeric' },\n        {\n            title: 'Address',\n            field: 'address',\n            lookup: { 1: 'kolakkaranor', 2: 'Umareddiyur',3:'Ammapettai',4:'Nerinjipettai',5:'Poolambatti',6:'Mettur',7:'Boodapadi',8:'Guruvareddiyur',9:'Singampettai',10:'Chittar',11:'Bhavani' },\n        },\n        {\n            title: 'Coins',\n            field: 'coins',\n        },\n        {\n            title: 'Repeat',\n            field: 'repeatType',\n            lookup:{1:'Yes',2:'No'}\n        },\n        {\n            title: 'Repeat Date',\n            field: 'repeatDate',\n            type:'date'\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { name: type==\"general\" ? '' :'Pradeep', phoneNumber: 9976322613, address: 1 , coins:'10',repeatType:1,repeatDate:''},\n        { name: type==\"general\" ? '' :'Mani', phoneNumber: 993826778, address: 2 , coins:'5',repeatType:1,repeatDate:''},\n    ]);\n\n    return (\n        <div>\n            <MaterialTable\n                title=\"Customer List\"\n                columns={columns}\n                data={data}\n                options={{\n                    grouping: false,\n                    actionsColumnIndex: -1\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                            <React.Fragment>\n                              {/* <Button variant=\"contained\">Default</Button> */}\n                             <PatientPurchase title={rowData.name} />\n                          </React.Fragment>\n                        )\n                      },\n                    },\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PatientList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PatientList from './patientList';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={1}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin:\"24px\",\n    flexGrow: 1,\n    // backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function List() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"#273035\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"General\" {...a11yProps(0)} />\n          <Tab label=\"Cronic\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n      <PatientList type='general'/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n      <PatientList type='cronic'/>\n      </TabPanel>\n    </div>\n  );\n}","import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: 'http://localhost:5000/api/v1'\n  });\n\nAPI.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\nAPI.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n\n\n  export default API;","import React, { useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport API from '../../api';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    backgroundColor:\"#273035\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({title}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Stocks\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Close\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n         <EachItemEntry title={title}/>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction EachItemEntry({ title }) {\n\n    useEffect(()=>{\n      API.get('/productDetails/products')\n      .then(res=>{\n          console.log(res);\n      })\n      .catch(err=>{\n          console.log(err);\n      })\n  });\n    const [columns, setColumns] = useState([\n        // { title: 'S.No', field: 'sno' },\n        { title: 'Product Code', field: 'productCode' },\n        { title: 'Expire Date', field: 'expire_date',type:'date' },\n        { title: 'Batch No', field: 'batch_no' },\n        { title: 'Product Code', field: 'productCode' },\n        { title: 'Stocky', field: 'stocky' ,lookup:{1:'GSK',2:'Deepa Medical'}},\n        // { title: 'Product Name', field: 'productName' },\n        { title: 'Packing Type', field: 'packingType' },\n        { title: 'Packing Volume', field: 'packingVolume' },\n        { title: 'Quantity', field: 'quantity' },\n        {\n            title: 'PTR',\n            field: 'ptr',\n        },\n        {\n            title: 'PTR GST%',\n            field: 'gst',\n        },\n        {\n            title: 'Total PTR',\n            field: 'totalPTR',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Discount',\n            field: 'discount',\n        },\n        {\n            title: 'Selling Price',\n            field: 'sellingPrice',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { sno: \"1\", productCode: \"1001\",expireDate:'',batchNo:\"4\", stocky:1,productName: 'Cold 5mg tablet', packingType: \"ml\", packingVolume: \"50\", quantity: \"86\", ptr: \"100\", ptrGST: \"5%\", totalPTR: \"105\", mrp: \"205\", discount: \"10%\", sellingPrice: \"180\" },\n    ]);\n\n  const handleRowAdd = (newData, resolve,reject)=>{\n    API.post(\"/productDetails/product\",{data:newData})\n    .then((res)=>{\n        console.log(res,\"handleRowAdd\");\n        resolve();\n    })\n    .catch((err)=>{\n        resolve();\n        console.log(err,handleRowAdd);\n    })\n}\n\n    return (\n        <div style={{ margin: \"24px\" }}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true\n                    // filtering: true,\n                    // grouping: false\n                }}\n                editable={{\n                  onRowAdd: newData =>\n                  new Promise((resolve, reject) => {\n                      handleRowAdd(newData, resolve,reject);\n                  }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\n// export default EachItemEntry;","import React, { useState , useEffect} from 'react';\nimport MaterialTable from 'material-table';\nimport { useSnackbar } from 'notistack';\nimport EachItemEntry from './eachItemEntry';\nimport API from '../../api';\n\nfunction CreateStock() {\n    const [isLoading,setIsLoading] = useState(false);\n    const { enqueueSnackbar } = useSnackbar();\n    useEffect(()=>{\n        getStocks();\n    },[]);\n\n    const getStocks = ()=>{\n        setIsLoading(true);\n         API.get('/product/products')\n        .then(res=>{\n            setData(res.data.data);\n            console.log(res);\n            setIsLoading(false);\n        })\n        .catch(err=>{\n            setIsLoading(false);\n            console.log(err);\n        })\n    }\n    const [columns, setColumns] = useState([\n        { title: 'Product Code', field: 'product_code'},\n        { title: 'Product Name', field: 'product_name' },\n        { title: 'HSN Name', field: 'hsn_name' },\n        // { title: 'Packing Type', field: 'packingType' },\n        // { title: 'Packing Volume', field: 'packingVolume' },\n        { title: 'Quantity', field: 'quantity' },\n        // {\n        //     title: 'PTR',\n        //     field: 'ptr',\n        // },\n        // {\n        //     title: 'PTR GST%',\n        //     field: 'ptrGST',\n        // },\n        {\n            title: 'PTR (Include Tax)',\n            field: 'totalPTR',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Discount',\n            field: 'discount',\n        },\n        {\n            title: 'Selling Price',\n            field: 'sellingPrice',\n        },\n    ]);\n\n    const [data, setData] = useState([]);\n\n    const handleRowAdd = (newData, resolve,reject)=>{\n        API.post(\"/product/product\",{data:newData})\n        .then((res)=>{\n            enqueueSnackbar('Product Added',{ variant: 'success',});\n            resolve();\n            getStocks();\n        })\n        .catch((err)=>{\n            resolve();\n            console.log(err,handleRowAdd);\n        })\n    }\n\n    const handleRowUpdate = (newData, resolve,reject)=>{\n        API.post(\"/product/product\",{data:newData})\n        .then((res)=>{\n            getStocks();\n            resolve();\n        })\n        .catch((err)=>{\n            resolve();\n            console.log(err,handleRowAdd);\n        })\n    }\n\n    const handleRowDelete = (newData, resolve,reject)=>{\n        API.delete(`/product/product/${newData.id}`)\n        .then((res)=>{\n            enqueueSnackbar('Product Deleted',{ variant: 'error',});\n            getStocks();\n            resolve();\n        })\n        .catch((err)=>{\n            resolve();\n            console.log(err,handleRowAdd);\n        })\n    }\n\n    return (\n        <div style={{ margin: \"24px\" }}>\n            <MaterialTable\n                isLoading={isLoading}\n                title=\"Stock List\"\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true\n                    // filtering: true,\n                    // grouping: false\n                }}\n                detailPanel={[\n                    {\n                        tooltip: 'Show Name',\n                        render: rowData => {\n                            return (\n                                <React.Fragment>\n                                    {/* <Button variant=\"contained\">Default</Button> */}\n                                    <EachItemEntry title={rowData.productName} />\n                                </React.Fragment>\n                            )\n                        },\n                    },\n                ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            handleRowAdd(newData, resolve,reject);\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            handleRowUpdate(newData, resolve,reject);\n                        }),\n                    onRowDelete: data =>\n                        new Promise((resolve, reject) => {\n                            handleRowDelete(data, resolve,reject);\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default CreateStock;","import ItemData from './itemData'\nfunction Stock(){\n return <ItemData />;\n}\nexport default Stock;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Purchase from '../purchase';\nimport { Button } from '@material-ui/core';\n\nfunction EachProductPurchase({title}) {\n    const { useState } = React;\n\n    function t (ch){\n    }\n\n    const [columns, setColumns] = useState([\n        { title: 'Product Name', field: 'productName' ,type:\"datetime\"},\n        { title: 'Description', field: 'description' },\n        { title: 'Expire Date', field: 'expireDate', type:\"date\" },\n        { title: 'Unit', field: 'unit' },\n        {\n            title: 'Rate',\n            field: 'rate',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Tax %',\n            field: 'taxPercentage',\n        },\n        {\n            title: 'Tax Amount',\n            field: 'taxAmount',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', expireDate:\"\", unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', expireDate:\"\", unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true,\n                    // filtering: true,\n                    // grouping: false\n                    actionsColumnIndex: -1\n                  }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            t(newData)\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            t(oldData)\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default EachProductPurchase;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport EachProductPurchase from './eachProductPurchase';\nfunction Purchase() {\n    const { useState } = React;\n\n\n    const [columns, setColumns] = useState([\n        { title: 'Product Name', field: 'productName' },\n        { title: 'Description', field: 'description', initialEditValue: '' },\n        { title: 'Unit', field: 'unit' },\n        {\n            title: 'Rate',\n            field: 'rate',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Tax %',\n            field: 'taxPercentage',\n        },\n        {\n            title: 'Tax Amount',\n            field: 'taxAmount',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n  \n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title=\"Purchase List\"\n                columns={columns}\n                data={data}\n                options={{\n                    // filtering: true,\n                    // grouping: false\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                          <EachProductPurchase title={rowData.productName}/>\n                        )\n                      },\n                    }\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default Purchase;","import ReactApexCharts from 'react-apexcharts'\nimport React from 'react';\nclass ApexChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            series: [{\n                name: 'Inflation',\n                data: [2030, 310, 400, 1010, 400, 360, 320, 230, 140, 800, 500, 200]\n            }],\n            options: {\n                chart: {\n                    height: 350,\n                    type: 'bar',\n                },\n                plotOptions: {\n                    bar: {\n                        dataLabels: {\n                            position: 'top', // top, center, bottom\n                        },\n                    }\n                },\n                dataLabels: {\n                    enabled: true,\n                    formatter: function (val) {\n                        return \"₹\" +val;\n                    },\n                    offsetY: -20,\n                    style: {\n                        fontSize: '12px',\n                        colors: [\"#304758\"]\n                    }\n                },\n\n                xaxis: {\n                    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n                    position: 'top',\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    crosshairs: {\n                        fill: {\n                            type: 'gradient',\n                            gradient: {\n                                colorFrom: '#D8E3F0',\n                                colorTo: '#BED1E6',\n                                stops: [0, 100],\n                                opacityFrom: 0.4,\n                                opacityTo: 0.5,\n                            }\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                    }\n                },\n                yaxis: {\n                    axisBorder: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false,\n                    },\n                    labels: {\n                        show: false,\n                        formatter: function (val) {\n                            return val + \"%\";\n                        }\n                    }\n\n                },\n                title: {\n                    text: 'Monthly Inflation in Awfwefwefwefrgentina, 2002',\n                    floating: true,\n                    offsetY: 30030,\n                    align: 'center',\n                    style: {\n                        color: '#444'\n                    }\n                }\n            },\n\n\n        };\n    }\n    render() {\n        return (\n            <div id=\"chart\">\n                <ReactApexCharts options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n            </div>\n        );\n    }\n}\n\n\n\nexport default ApexChart;","import ReactApexCharts from 'react-apexcharts'\nimport React from 'react';\n\nclass ApexChart extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        series: [44, 55, 13, 43, 22],\n        options: {\n          chart: {\n            width: 380,\n            type: 'pie',\n          },\n          labels: ['Kolakkaranoor', 'Umareddiyur', 'Ammapetai', 'Nerinjipettai', 'Poolampatti'],\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 200\n              },\n              legend: {\n                position: 'bottom'\n              }\n            }\n          }]\n        },\n      \n      \n      };\n    }\n\n  \n\n    render() {\n      return (\n        \n\n  <div id=\"chart\">\n<ReactApexCharts options={this.state.options} series={this.state.series} type=\"pie\" width={380} />\n</div>\n\n\n      );\n    }\n  }\n\n  export default ApexChart;","import Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApexChart from '../../components/chart';\nimport PieChart from '../../components/chart/pie';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n   margin:'24px',\n   padding:'24px',\n  },\n}));\n\n\nfunction Dashboard(){\n    const classes = useStyles();\n    return (\n        <div >\n         <Paper className={classes.paper}><ApexChart /></Paper>\n         <Paper className={classes.paper}><PieChart /></Paper>\n         {/* <Paper className={classes.paper}><ApexChart /></Paper> */}\n       </div>\n    );\n}\nexport default Dashboard;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Purchase from '../purchase';\n\n\nfunction Dealer({title}) {\n    const { useState } = React;\n\n    function t (ch){\n    }\n\n    const [columns, setColumns] = useState([\n        { title: 'Dealer Name', field: 'dealerName'},\n        { title: 'Address', field: 'address' },\n        { title: 'Phone Number', field: 'phoneNumber'},\n        { title: 'Client Companies', field: 'clientCompanies' },\n        {\n            title: 'Payment Method',\n            field: 'rate',\n        },\n        {\n            title: 'Last Payment',\n            field: 'rate',\n        },\n        {\n            title: 'Credit Days',\n            field: 'creditDays',\n        }\n    ]);\n\n    const [data, setData] = useState([\n        { dealerName: 'GSK', address: 'Erode', expireDate:\"\", phoneNumber: 9976322613, paymentMethod: 'Card',lastPayment:'65400',creditDays:30},\n        { dealerName: 'Deepa Medical', address: 'Salem', phoneNumber: 8232382942,  paymentMethod: 'Cash',lastPayment:'34400',creditDays:60},\n        \n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true,\n                    // filtering: true,\n                    // grouping: false\n                    actionsColumnIndex: -1\n                  }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            t(newData)\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            t(oldData)\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Dealer;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Dealer from './dealer';\nfunction DealerList() {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Dealer Name', field: 'dealerName'},\n        { title: 'Address', field: 'address' },\n        { title: 'Phone Number', field: 'phoneNumber'},\n        { title: 'Client Companies', field: 'clientCompanies' },\n        {\n            title: 'Payment Method',\n            field: 'paymentMethod',\n        },\n        {\n            title: 'Last Payment',\n            field: 'lastPayment',\n        },\n        {\n            title: 'Credit Days',\n            field: 'creditDays',\n        }\n    ]);\n\n    const [data, setData] = useState([\n        { dealerName: 'GSK', address: 'Erode', expireDate:\"\", phoneNumber: 9976322613, paymentMethod: 'Card',lastPayment:'65400',creditDays:30},\n        { dealerName: 'Deepa Medical', address: 'Salem', phoneNumber: 8232382942,  paymentMethod: 'Cash',lastPayment:'34400',creditDays:60},\n         ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title=\"Dealer List\"\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true\n                    // filtering: true,\n                    // grouping: false\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                            <React.Fragment>\n                              {/* <Button variant=\"contained\">Default</Button> */}\n                          <Dealer title={rowData.productName} />\n                          </React.Fragment>\n                        )\n                      },\n                    },\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default DealerList;","import DealerList from './dealerList'\nfunction Stock(){\n return <DealerList />;\n}\nexport default Stock;","export const today = new Date();\n\nexport const sideBarData = [\n  {\n    text: 'Dashboard',\n    icon: 'dashboard',\n    url: 'pharma/dashboard',\n    active: false,\n  },\n  // {\n  //   text: 'Inventory',\n  //   icon: 'shopping_basket',\n  //   url: 'pharma/purchase',\n  //   active: false,\n  // },\n  {\n    text: 'Stock',\n    icon: 'show_chart',\n    url: 'pharma/stock',\n    active: false,\n  },\n  {\n    text: 'Customer',\n    icon: 'person',\n    url: 'pharma/patient',\n    active: false,\n  },\n  {\n    text: 'Dealer',\n    icon: 'group_add',\n    url: 'pharma/dealer',\n    active: false,\n  }\n  // {\n  //   text: 'Statistics',\n  //   icon: 'timeline',\n  //   url: 'pharma/chart',\n  //   active: false,\n  // },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  withRouter,\n} from 'react-router-dom';\nimport '../../assets/css/common.css';\nimport PatientList from '../../models/patient';\nimport Stock from '../../models/stock';\nimport Purchase from '../../models/purchase';\nimport Dashboard from '../../models/dashboard';\nimport Dealer from '../../models/dealer';\n\n\nimport { sideBarData } from '../../services/constants';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    background: '#273035',\n  },\n  menuButton: {\n    display: 'flex',\n    float: 'right',\n    position: 'absolute',\n    right: '20px',\n  },\n  toolbar: theme.mixins.toolbar,\n  toolBarContent: {\n    background: '#56b597',\n  },\n\n  sidebarContent: {\n    fontSize: '15px',\n    cursor: 'arrow !important',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    overflowX: 'hidden',\n    backgroundColor: '#273035',\n  },\n  content: {\n    background: '#e8eff5',\n    flexGrow: 1,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingBottom: '40px'  \n  },\n  activeItem: {\n    color: '#C0C0C0',\n    fontSize: '14px',\n    background: 'black',\n  },\n  inActiveItem: {\n    color: '#C0C0C0',\n    fontSize: '14px',\n  },\n  header:{\n    color:'white'\n  }\n}));\n\nfunction Navigation(props) {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [sidebarData, setSidebarData] = React.useState(sideBarData);\n  const [current, setCurrent] = React.useState('');\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  function handleSidebar() {\n    const sidebar = sideBarData.map((data) => {\n      data.active = false;\n      if (data.url === window.location.pathname.replace('/', ''))\n        data.active = true;\n      return data;\n    });\n    setSidebarData(sidebar);\n  }\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    // setIsMenuOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    // handleMobileMenuClose();\n  };\n\n  async function handleLogout() {\n    // try {\n    //   const res = await Logout(props);\n    //   openSnackbar({ message: 'Logged out successfully', variant: 'success' });\n    //   afterLogout(res);\n    // } catch (err) {\n    //   openSnackbar({ message: 'Logged out successfully', variant: 'success' });\n    //   afterLogout({});\n    // }\n  }\n  const menuId = 'primary-search-account-menu';\n\n  React.useEffect(() => {\n    // handleSidebar();\n  }, [current]);\n\n  function activeRoute(pathName) {\n    return window.location.pathname.indexOf(pathName) > -1;\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolBarContent}>\n        <div className={classes.toolbar}>\n        {/* <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton> */}\n        </div>\n      </div>\n      <div>\n        <Divider />\n        <div className={classes.sidebarContent}>\n          <List className='my-list'>\n            {sideBarData.map((data) => (\n              <React.Fragment key={data.text}>\n                <Link to={`/${data.url}`}>\n                  <ListItem\n                    className={\n                      activeRoute(data.url)\n                        ? classes.activeItem\n                        : classes.inActiveItem\n                    }\n                    onClick={() => setCurrent(data.url)}\n                  >\n                    <ListItemIcon\n                      className={\n                        activeRoute(data.url)\n                          ? classes.activeItem\n                          : classes.inActiveItem\n                      }\n                    >\n                      <Icon>{data.icon}</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={data.text} />\n                  </ListItem>\n                </Link>\n              </React.Fragment>\n            ))}\n          </List>\n        </div>\n      </div>\n    </div>\n  );\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })} color='default'>\n        {/* <Toolbar /> */}\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.header} noWrap>\n            Guhan Pharmacy\n          </Typography>\n        </Toolbar>\n      </AppBar>\n       <Router>\n        <nav className={classes.drawer} aria-label='Mailbox folders'>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation='css'>\n            <Drawer\n              container={container}\n              variant='temporary'\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n              })}\n              classes={{\n                paper: clsx({\n                  [classes.drawerOpen]: open,\n                  [classes.drawerClose]: !open,\n                }),\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation='css'>\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant='permanent'\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Route exact path='/pharma/stock'>\n            <Stock />\n          </Route>\n          <Route exact path='/pharma/purchase'>\n          <Purchase />\n          </Route>\n          <Route exact path='/pharma/patient'>\n            <PatientList />\n          </Route>\n          <Route exact path='/pharma/dealer'>\n            <Dealer />\n          </Route>\n          <Route exact path='/pharma/dashboard'>\n            <Dashboard />\n          </Route>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nNavigation.propTypes = {\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n};\n\nexport default withRouter(Navigation);","import React, { Component } from 'react';\n// import {\n//   BrowserRouter ,\n//   Route,\n//   Switch,\n//   Redirect,\n// } from 'react-router-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n// import { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport Drawer from '../components/navigation/navigation';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Router>\n         <Switch>\n         <Route exact path=\"/pharma\">\n          <Redirect to='/dashboard' />\n          </Route>\n          <Route path=\"/\">\n          <Drawer />\n          </Route>\n          <Route exact path=\"pharma/stock\">\n            <Drawer />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Navigation from './components/navigation/navigation';\nimport { hot } from 'react-hot-loader/root';\n\nimport Routes from './routes';\n\n\nimport logo from './logo.svg';\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default hot(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nReactDOM.render(\n  <SnackbarProvider maxSnack={3}>\n    <App />\n</SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}