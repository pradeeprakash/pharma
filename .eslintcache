[{"/Users/pradeep/Documents/customer-credit-management-fe/src/index.js":"1","/Users/pradeep/Documents/customer-credit-management-fe/src/reportWebVitals.js":"2","/Users/pradeep/Documents/customer-credit-management-fe/src/App.js":"3","/Users/pradeep/Documents/customer-credit-management-fe/src/components/table/table.js":"4","/Users/pradeep/Documents/customer-credit-management-fe/src/components/navigation/navigation.js":"5","/Users/pradeep/Documents/customer-credit-management-fe/src/services/constants.jsx":"6","/Users/pradeep/Documents/customer-credit-management-fe/src/routes/index.jsx":"7","/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/index.js":"8","/Users/pradeep/Documents/customer-credit-management-fe/src/models/purchase/index.js":"9","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/index.js":"10","/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/itemData.js":"11","/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/eachItemEntry.js":"12","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/patientList.js":"13","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/patientPurchase.js":"14","/Users/pradeep/Documents/customer-credit-management-fe/src/models/purchase/eachProductPurchase.js":"15","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dashboard/index.js":"16","/Users/pradeep/Documents/customer-credit-management-fe/src/components/chart/index.js":"17","/Users/pradeep/Documents/customer-credit-management-fe/src/components/chart/pie.js":"18","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/index.js":"19","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/dealerList.js":"20","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/dealer.js":"21","/Users/pradeep/Documents/customer-credit-management-fe/src/api/index.js":"22"},{"size":556,"mtime":1614005811253,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607790842045,"results":"25","hashOfConfig":"24"},{"size":271,"mtime":1607931911377,"results":"26","hashOfConfig":"24"},{"size":2824,"mtime":1607939167866,"results":"27","hashOfConfig":"28"},{"size":8932,"mtime":1614016321237,"results":"29","hashOfConfig":"24"},{"size":701,"mtime":1608054891701,"results":"30","hashOfConfig":"24"},{"size":865,"mtime":1608024103830,"results":"31","hashOfConfig":"24"},{"size":97,"mtime":1607935581876,"results":"32","hashOfConfig":"24"},{"size":4543,"mtime":1607941338005,"results":"33","hashOfConfig":"24"},{"size":1903,"mtime":1608903819024,"results":"34","hashOfConfig":"24"},{"size":4350,"mtime":1614016413645,"results":"35","hashOfConfig":"24"},{"size":5615,"mtime":1613914580959,"results":"36","hashOfConfig":"24"},{"size":3487,"mtime":1608903830156,"results":"37","hashOfConfig":"24"},{"size":2991,"mtime":1607948942998,"results":"38","hashOfConfig":"24"},{"size":3594,"mtime":1607941243771,"results":"39","hashOfConfig":"24"},{"size":634,"mtime":1607948460076,"results":"40","hashOfConfig":"24"},{"size":3080,"mtime":1607948396886,"results":"41","hashOfConfig":"24"},{"size":931,"mtime":1608022399670,"results":"42","hashOfConfig":"24"},{"size":103,"mtime":1608054450783,"results":"43","hashOfConfig":"24"},{"size":3341,"mtime":1608054770605,"results":"44","hashOfConfig":"24"},{"size":2972,"mtime":1608054825966,"results":"45","hashOfConfig":"24"},{"size":768,"mtime":1613587239101,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rqujbm",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"1uwpurs",{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/pradeep/Documents/customer-credit-management-fe/src/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/reportWebVitals.js",[],["103","104"],"/Users/pradeep/Documents/customer-credit-management-fe/src/App.js",["105","106"],"import Navigation from './components/navigation/navigation';\nimport { hot } from 'react-hot-loader/root';\n\nimport Routes from './routes';\n\n\nimport logo from './logo.svg';\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default hot(App);\n","/Users/pradeep/Documents/customer-credit-management-fe/src/components/table/table.js",["107"],"import React from 'react';\nimport MaterialTable from 'material-table';\nfunction SimpleAction() {\n    const { useState } = React;\n\n    function t (ch){\ndebugger\n    }\n\n    const [columns, setColumns] = useState([\n        { title: 'Name', field: 'name' },\n        { title: 'Surname', field: 'surname', initialEditValue: 'initial edit value' },\n        { title: 'Phone Number', field: 'phone', type: 'numeric' },\n        {\n            title: 'City',\n            field: 'city',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n        },\n        {\n            title: 'City',\n            field: 'city',\n        },\n        {\n            title: 'City',\n            field: 'city',\n        },\n        {\n            title: 'City',\n            field: 'city',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { name: 'Pradeep', surname: 'Prakash', phone: 9976322613, city: 'Kolakaranoor' },\n        { name: 'Mani', surname: 'Vasakam', phone: 993826778, city: 34 },\n    ]);\n\n    return (\n        <div style={{margin:\"40px\"}}>\n            <MaterialTable\n                title=\"Patient List\"\n                columns={columns}\n                data={data}\n                options={{\n                    filtering: true,\n                    grouping: false\n                  }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            t(newData)\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            t(oldData)\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default SimpleAction;",["108","109"],"/Users/pradeep/Documents/customer-credit-management-fe/src/components/navigation/navigation.js",["110","111","112","113","114","115","116","117","118","119"],"/Users/pradeep/Documents/customer-credit-management-fe/src/services/constants.jsx",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/routes/index.jsx",["120"],"import React, { Component } from 'react';\n// import {\n//   BrowserRouter ,\n//   Route,\n//   Switch,\n//   Redirect,\n// } from 'react-router-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n// import { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport Drawer from '../components/navigation/navigation';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Router>\n         <Switch>\n         <Route exact path=\"/pharma\">\n          <Redirect to='/dashboard' />\n          </Route>\n          <Route path=\"/\">\n          <Drawer />\n          </Route>\n          <Route exact path=\"pharma/stock\">\n            <Drawer />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/models/purchase/index.js",["121"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport EachProductPurchase from './eachProductPurchase';\nfunction Purchase() {\n    const { useState } = React;\n\n\n    const [columns, setColumns] = useState([\n        { title: 'Product Name', field: 'productName' },\n        { title: 'Description', field: 'description', initialEditValue: '' },\n        { title: 'Unit', field: 'unit' },\n        {\n            title: 'Rate',\n            field: 'rate',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Tax %',\n            field: 'taxPercentage',\n        },\n        {\n            title: 'Tax Amount',\n            field: 'taxAmount',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n  \n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title=\"Purchase List\"\n                columns={columns}\n                data={data}\n                options={{\n                    // filtering: true,\n                    // grouping: false\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                          <EachProductPurchase title={rowData.productName}/>\n                        )\n                      },\n                    }\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\n\nexport default Purchase;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/itemData.js",["122"],"/Users/pradeep/Documents/customer-credit-management-fe/src/models/stock/eachItemEntry.js",["123","124","125","126","127"],"import React, { useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport API from '../../api';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    backgroundColor:\"#273035\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({title}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Stocks\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Close\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n         <EachItemEntry title={title}/>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction EachItemEntry({ title }) {\n\n    useEffect(()=>{\n      API.get('/productDetails/products')\n      .then(res=>{\n          console.log(res);\n      })\n      .catch(err=>{\n          console.log(err);\n      })\n  });\n    const [columns, setColumns] = useState([\n        // { title: 'S.No', field: 'sno' },\n        { title: 'Product Code', field: 'productCode' },\n        { title: 'Expire Date', field: 'expire_date',type:'date' },\n        { title: 'Batch No', field: 'batch_no' },\n        { title: 'Product Code', field: 'productCode' },\n        { title: 'Stocky', field: 'stocky' ,lookup:{1:'GSK',2:'Deepa Medical'}},\n        // { title: 'Product Name', field: 'productName' },\n        { title: 'Packing Type', field: 'packingType' },\n        { title: 'Packing Volume', field: 'packingVolume' },\n        { title: 'Quantity', field: 'quantity' },\n        {\n            title: 'PTR',\n            field: 'ptr',\n        },\n        {\n            title: 'PTR GST%',\n            field: 'gst',\n        },\n        {\n            title: 'Total PTR',\n            field: 'totalPTR',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Discount',\n            field: 'discount',\n        },\n        {\n            title: 'Selling Price',\n            field: 'sellingPrice',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { sno: \"1\", productCode: \"1001\",expireDate:'',batchNo:\"4\", stocky:1,productName: 'Cold 5mg tablet', packingType: \"ml\", packingVolume: \"50\", quantity: \"86\", ptr: \"100\", ptrGST: \"5%\", totalPTR: \"105\", mrp: \"205\", discount: \"10%\", sellingPrice: \"180\" },\n    ]);\n\n  const handleRowAdd = (newData, resolve,reject)=>{\n    API.post(\"/productDetails/product\",{data:newData})\n    .then((res)=>{\n        console.log(res,\"handleRowAdd\");\n        resolve();\n    })\n    .catch((err)=>{\n        resolve();\n        console.log(err,handleRowAdd);\n    })\n}\n\n    return (\n        <div style={{ margin: \"24px\" }}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true\n                    // filtering: true,\n                    // grouping: false\n                }}\n                editable={{\n                  onRowAdd: newData =>\n                  new Promise((resolve, reject) => {\n                      handleRowAdd(newData, resolve,reject);\n                  }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\n// export default EachItemEntry;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/patientList.js",["128","129","130"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport PatientPurchase from './patientPurchase';\nfunction PatientList({type}) {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Name', field: 'name' },\n        { title: 'Phone Number', field: 'phoneNumber', type: 'numeric' },\n        {\n            title: 'Address',\n            field: 'address',\n            lookup: { 1: 'kolakkaranor', 2: 'Umareddiyur',3:'Ammapettai',4:'Nerinjipettai',5:'Poolambatti',6:'Mettur',7:'Boodapadi',8:'Guruvareddiyur',9:'Singampettai',10:'Chittar',11:'Bhavani' },\n        },\n        {\n            title: 'Coins',\n            field: 'coins',\n        },\n        {\n            title: 'Repeat',\n            field: 'repeatType',\n            lookup:{1:'Yes',2:'No'}\n        },\n        {\n            title: 'Repeat Date',\n            field: 'repeatDate',\n            type:'date'\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { name: type==\"general\" ? '' :'Pradeep', phoneNumber: 9976322613, address: 1 , coins:'10',repeatType:1,repeatDate:''},\n        { name: type==\"general\" ? '' :'Mani', phoneNumber: 993826778, address: 2 , coins:'5',repeatType:1,repeatDate:''},\n    ]);\n\n    return (\n        <div>\n            <MaterialTable\n                title=\"Customer List\"\n                columns={columns}\n                data={data}\n                options={{\n                    grouping: false,\n                    actionsColumnIndex: -1\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                            <React.Fragment>\n                              {/* <Button variant=\"contained\">Default</Button> */}\n                             <PatientPurchase title={rowData.name} />\n                          </React.Fragment>\n                        )\n                      },\n                    },\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PatientList;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/patient/patientPurchase.js",["131"],"import React from 'react';\nimport MaterialTable from 'material-table';\nfunction PatientPurchase({title}) {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Medition Name', field: 'name' },\n        { title: 'Place', field: 'surname', initialEditValue: 'initial edit value' },\n        { title: 'Price', field: 'phone', type: 'numeric' },\n        {\n            title: 'Tax',\n            field: 'city',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n        },\n        {\n            title: 'Discount',\n            field: 'city',\n        },\n        {\n            title: 'Totak',\n            field: 'city',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { name: 'Pradeep', surname: 'Prakash', phone: 9976322613, city: 'Kolakaranoor' },\n        { name: 'Mani', surname: 'Vasakam', phone: 993826778, city: 34 },\n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    selection:true,\n                    // filtering: true,\n                    // grouping: false,\n                    actionsColumnIndex: -1\n                  }}\n                  actions={[\n                    {\n                      icon: 'receipt',\n                      tooltip: 'Save User',\n                      onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n                    }\n                ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PatientPurchase;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/purchase/eachProductPurchase.js",["132","133","134"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport Purchase from '../purchase';\nimport { Button } from '@material-ui/core';\n\nfunction EachProductPurchase({title}) {\n    const { useState } = React;\n\n    function t (ch){\n    }\n\n    const [columns, setColumns] = useState([\n        { title: 'Product Name', field: 'productName' ,type:\"datetime\"},\n        { title: 'Description', field: 'description' },\n        { title: 'Expire Date', field: 'expireDate', type:\"date\" },\n        { title: 'Unit', field: 'unit' },\n        {\n            title: 'Rate',\n            field: 'rate',\n        },\n        {\n            title: 'MRP',\n            field: 'mrp',\n        },\n        {\n            title: 'Tax %',\n            field: 'taxPercentage',\n        },\n        {\n            title: 'Tax Amount',\n            field: 'taxAmount',\n        },\n    ]);\n\n    const [data, setData] = useState([\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', expireDate:\"\", unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n        { productName: 'Fever  Tablet', description: 'Vasakam', expireDate:\"\", unit: 993826778, rate: 120, mrp:500,taxPercentage:'5%', taxAmount:'50' },\n        { productName: 'Cold 5mg tablet', description: 'Prakash', expireDate:\"\", unit: 9976322613, rate: 120,mrp:500,taxPercentage:'5%', taxAmount:'50'},\n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true,\n                    // filtering: true,\n                    // grouping: false\n                    actionsColumnIndex: -1\n                  }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            t(newData)\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            t(oldData)\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default EachProductPurchase;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dashboard/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/components/chart/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/components/chart/pie.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/index.js",[],"/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/dealerList.js",["135"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport Dealer from './dealer';\nfunction DealerList() {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState([\n        { title: 'Dealer Name', field: 'dealerName'},\n        { title: 'Address', field: 'address' },\n        { title: 'Phone Number', field: 'phoneNumber'},\n        { title: 'Client Companies', field: 'clientCompanies' },\n        {\n            title: 'Payment Method',\n            field: 'paymentMethod',\n        },\n        {\n            title: 'Last Payment',\n            field: 'lastPayment',\n        },\n        {\n            title: 'Credit Days',\n            field: 'creditDays',\n        }\n    ]);\n\n    const [data, setData] = useState([\n        { dealerName: 'GSK', address: 'Erode', expireDate:\"\", phoneNumber: 9976322613, paymentMethod: 'Card',lastPayment:'65400',creditDays:30},\n        { dealerName: 'Deepa Medical', address: 'Salem', phoneNumber: 8232382942,  paymentMethod: 'Cash',lastPayment:'34400',creditDays:60},\n         ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title=\"Dealer List\"\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true\n                    // filtering: true,\n                    // grouping: false\n                  }}\n                  detailPanel={[\n                    {\n                      tooltip: 'Show Name',\n                      render: rowData => {\n                        return (\n                            <React.Fragment>\n                              {/* <Button variant=\"contained\">Default</Button> */}\n                          <Dealer title={rowData.productName} />\n                          </React.Fragment>\n                        )\n                      },\n                    },\n                  ]}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default DealerList;","/Users/pradeep/Documents/customer-credit-management-fe/src/models/dealer/dealer.js",["136","137"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport Purchase from '../purchase';\n\n\nfunction Dealer({title}) {\n    const { useState } = React;\n\n    function t (ch){\n    }\n\n    const [columns, setColumns] = useState([\n        { title: 'Dealer Name', field: 'dealerName'},\n        { title: 'Address', field: 'address' },\n        { title: 'Phone Number', field: 'phoneNumber'},\n        { title: 'Client Companies', field: 'clientCompanies' },\n        {\n            title: 'Payment Method',\n            field: 'rate',\n        },\n        {\n            title: 'Last Payment',\n            field: 'rate',\n        },\n        {\n            title: 'Credit Days',\n            field: 'creditDays',\n        }\n    ]);\n\n    const [data, setData] = useState([\n        { dealerName: 'GSK', address: 'Erode', expireDate:\"\", phoneNumber: 9976322613, paymentMethod: 'Card',lastPayment:'65400',creditDays:30},\n        { dealerName: 'Deepa Medical', address: 'Salem', phoneNumber: 8232382942,  paymentMethod: 'Cash',lastPayment:'34400',creditDays:60},\n        \n    ]);\n\n    return (\n        <div style={{margin:\"24px\"}}>\n            <MaterialTable\n                title={title}\n                columns={columns}\n                data={data}\n                options={{\n                    exportButton: true,\n                    // filtering: true,\n                    // grouping: false\n                    actionsColumnIndex: -1\n                  }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                setData([...data, newData]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            t(newData)\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                setData([...dataUpdate]);\n\n                                resolve();\n                            }, 0)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            t(oldData)\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                setData([...dataDelete]);\n\n                                resolve()\n                            }, 0)\n                        }),\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Dealer;","/Users/pradeep/Documents/customer-credit-management-fe/src/api/index.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":12},{"ruleId":"142","severity":1,"message":"147","line":10,"column":21,"nodeType":"144","messageId":"145","endLine":10,"endColumn":31},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"142","severity":1,"message":"150","line":18,"column":8,"nodeType":"144","messageId":"145","endLine":18,"endColumn":24},{"ruleId":"142","severity":1,"message":"151","line":19,"column":8,"nodeType":"144","messageId":"145","endLine":19,"endColumn":23},{"ruleId":"142","severity":1,"message":"152","line":121,"column":9,"nodeType":"144","messageId":"145","endLine":121,"endColumn":19},{"ruleId":"142","severity":1,"message":"153","line":124,"column":10,"nodeType":"144","messageId":"145","endLine":124,"endColumn":21},{"ruleId":"142","severity":1,"message":"154","line":135,"column":9,"nodeType":"144","messageId":"145","endLine":135,"endColumn":26},{"ruleId":"142","severity":1,"message":"155","line":139,"column":12,"nodeType":"144","messageId":"145","endLine":139,"endColumn":25},{"ruleId":"142","severity":1,"message":"156","line":149,"column":9,"nodeType":"144","messageId":"145","endLine":149,"endColumn":30},{"ruleId":"142","severity":1,"message":"157","line":154,"column":9,"nodeType":"144","messageId":"145","endLine":154,"endColumn":24},{"ruleId":"142","severity":1,"message":"158","line":159,"column":18,"nodeType":"144","messageId":"145","endLine":159,"endColumn":30},{"ruleId":"142","severity":1,"message":"159","line":169,"column":9,"nodeType":"144","messageId":"145","endLine":169,"endColumn":15},{"ruleId":"142","severity":1,"message":"160","line":12,"column":3,"nodeType":"144","messageId":"145","endLine":12,"endColumn":7},{"ruleId":"142","severity":1,"message":"147","line":8,"column":21,"nodeType":"144","messageId":"145","endLine":8,"endColumn":31},{"ruleId":"142","severity":1,"message":"147","line":27,"column":21,"nodeType":"144","messageId":"145","endLine":27,"endColumn":31},{"ruleId":"142","severity":1,"message":"161","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":20},{"ruleId":"142","severity":1,"message":"162","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":16},{"ruleId":"142","severity":1,"message":"163","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":15},{"ruleId":"142","severity":1,"message":"164","line":39,"column":9,"nodeType":"144","messageId":"145","endLine":39,"endColumn":24},{"ruleId":"142","severity":1,"message":"147","line":83,"column":21,"nodeType":"144","messageId":"145","endLine":83,"endColumn":31},{"ruleId":"142","severity":1,"message":"147","line":7,"column":21,"nodeType":"144","messageId":"145","endLine":7,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":32,"column":21,"nodeType":"167","messageId":"168","endLine":32,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":33,"column":21,"nodeType":"167","messageId":"168","endLine":33,"endColumn":23},{"ruleId":"142","severity":1,"message":"147","line":6,"column":21,"nodeType":"144","messageId":"145","endLine":6,"endColumn":31},{"ruleId":"142","severity":1,"message":"169","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"170","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":12,"column":21,"nodeType":"144","messageId":"145","endLine":12,"endColumn":31},{"ruleId":"142","severity":1,"message":"147","line":7,"column":21,"nodeType":"144","messageId":"145","endLine":7,"endColumn":31},{"ruleId":"142","severity":1,"message":"169","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"147","line":12,"column":21,"nodeType":"144","messageId":"145","endLine":12,"endColumn":31},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'setColumns' is assigned a value but never used.",["171"],["172"],"'ChevronRightIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'isMenuOpen' is assigned a value but never used.","'sidebarData' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'handleSidebar' is defined but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'handleLogout' is defined but never used.","'menuId' is assigned a value but never used.","'Link' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'handleClickOpen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Purchase' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]